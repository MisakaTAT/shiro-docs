"use strict";(self.webpackChunkshiro_docs=self.webpackChunkshiro_docs||[]).push([[496],{6242:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-638c1d18",path:"/advanced/",title:"进阶",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"MsgUtils",slug:"msgutils",children:[]},{level:2,title:"内置工具类",slug:"内置工具类",children:[{level:3,title:"QQ号获取昵称",slug:"qq号获取昵称",children:[]},{level:3,title:"判断是否为全体 @",slug:"判断是否为全体",children:[]},{level:3,title:"获取所有被 @ 的用户",slug:"获取所有被-的用户",children:[]},{level:3,title:"获取消息内所有图片链接",slug:"获取消息内所有图片链接",children:[]},{level:3,title:"获取消息内所有视频链接",slug:"获取消息内所有视频链接",children:[]},{level:3,title:"获取群头像",slug:"获取群头像",children:[]},{level:3,title:"获取用户头像",slug:"获取用户头像",children:[]},{level:3,title:"创建自定义消息合并转发",slug:"创建自定义消息合并转发",children:[]}]},{level:2,title:"消息链",slug:"消息链",children:[]},{level:2,title:"主动发送",slug:"主动发送",children:[]},{level:2,title:"高级自定义配置",slug:"高级自定义配置",children:[]}],filePathRelative:"advanced/README.md",git:{updatedTime:1647611084e3,contributors:[{name:"MisakaTAT",email:"i@mikuac.com",commits:1}]}}},2724:(n,s,a)=>{a.r(s),a.d(s,{default:()=>p});const e=(0,a(6252).uE)('<h1 id="进阶" tabindex="-1"><a class="header-anchor" href="#进阶" aria-hidden="true">#</a> 进阶</h1><h2 id="msgutils" tabindex="-1"><a class="header-anchor" href="#msgutils" aria-hidden="true">#</a> MsgUtils</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// 以下简单示例为构建一条 at 全体群成员并包含图片与文本内容的消息</span>\n<span class="token comment">// 更多使用方法请见 com.mikuac.shiro.common.utils.MsgUtils</span>\n<span class="token class-name">MsgUtils</span> msgUtils <span class="token operator">=</span> <span class="token class-name">MsgUtils</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">atAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">img</span><span class="token punctuation">(</span><span class="token string">&quot;https://test.com/1.png&quot;</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string">&quot;hello~&quot;</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="内置工具类" tabindex="-1"><a class="header-anchor" href="#内置工具类" aria-hidden="true">#</a> 内置工具类</h2><h3 id="qq号获取昵称" tabindex="-1"><a class="header-anchor" href="#qq号获取昵称" aria-hidden="true">#</a> QQ号获取昵称</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">ShiroUtils</span><span class="token punctuation">.</span><span class="token function">getNickname</span><span class="token punctuation">(</span><span class="token number">12345678L</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="判断是否为全体" tabindex="-1"><a class="header-anchor" href="#判断是否为全体" aria-hidden="true">#</a> 判断是否为全体 @</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">ShiroUtils</span><span class="token punctuation">.</span><span class="token function">isAtAll</span><span class="token punctuation">(</span><span class="token class-name">String</span> msg<span class="token punctuation">)</span>\n<span class="token class-name">ShiroUtils</span><span class="token punctuation">.</span><span class="token function">isAtAll</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MsgChainBean</span><span class="token punctuation">&gt;</span></span> arrayMsg<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="获取所有被-的用户" tabindex="-1"><a class="header-anchor" href="#获取所有被-的用户" aria-hidden="true">#</a> 获取所有被 @ 的用户</h3><div class="custom-container warning"><p class="custom-container-title">注意</p><p>不包含全体 at</p></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**\n  * <span class="token keyword">@param</span> <span class="token parameter">arrayMsg</span> 消息链\n  * <span class="token keyword">@return</span> at 对象列表\n  */</span>\n<span class="token class-name">ShiroUtils</span><span class="token punctuation">.</span><span class="token function">getAtList</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MsgChainBean</span><span class="token punctuation">&gt;</span></span> arrayMsg<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="获取消息内所有图片链接" tabindex="-1"><a class="header-anchor" href="#获取消息内所有图片链接" aria-hidden="true">#</a> 获取消息内所有图片链接</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**\n  * <span class="token keyword">@param</span> <span class="token parameter">arrayMsg</span> 消息链\n  * <span class="token keyword">@return</span> 图片链接列表\n  */</span>\n<span class="token class-name">ShiroUtils</span><span class="token punctuation">.</span><span class="token function">getMsgImgUrlList</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MsgChainBean</span><span class="token punctuation">&gt;</span></span> arrayMsg<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="获取消息内所有视频链接" tabindex="-1"><a class="header-anchor" href="#获取消息内所有视频链接" aria-hidden="true">#</a> 获取消息内所有视频链接</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**\n  * <span class="token keyword">@param</span> <span class="token parameter">arrayMsg</span> 消息链\n  * <span class="token keyword">@return</span> 视频链接列表\n  */</span>\n<span class="token class-name">ShiroUtils</span><span class="token punctuation">.</span><span class="token function">getMsgVideoUrlList</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MsgChainBean</span><span class="token punctuation">&gt;</span></span> arrayMsg<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="获取群头像" tabindex="-1"><a class="header-anchor" href="#获取群头像" aria-hidden="true">#</a> 获取群头像</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**\n  * <span class="token keyword">@param</span> <span class="token parameter">groupId</span> 群号\n  * <span class="token keyword">@param</span> <span class="token parameter">size</span>    头像尺寸\n  * <span class="token keyword">@return</span> 头像链接 （size为0返回真实大小, 40(40*40), 100(100*100), 640(640*640)）\n  */</span>\n<span class="token class-name">ShiroUtils</span><span class="token punctuation">.</span><span class="token function">getGroupAvatar</span><span class="token punctuation">(</span><span class="token keyword">long</span> groupId<span class="token punctuation">,</span> <span class="token keyword">int</span> size<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="获取用户头像" tabindex="-1"><a class="header-anchor" href="#获取用户头像" aria-hidden="true">#</a> 获取用户头像</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**\n  * <span class="token keyword">@param</span> <span class="token parameter">userId</span> QQ号\n  * <span class="token keyword">@param</span> <span class="token parameter">size</span>   头像尺寸\n  * <span class="token keyword">@return</span> 头像链接 （size为0返回真实大小, 40(40*40), 100(100*100), 640(640*640)）\n  */</span>\n<span class="token class-name">ShiroUtils</span><span class="token punctuation">.</span><span class="token function">getUserAvatar</span><span class="token punctuation">(</span><span class="token keyword">long</span> userId<span class="token punctuation">,</span> <span class="token keyword">int</span> size<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="创建自定义消息合并转发" tabindex="-1"><a class="header-anchor" href="#创建自定义消息合并转发" aria-hidden="true">#</a> 创建自定义消息合并转发</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**\n  * <span class="token keyword">@param</span> <span class="token parameter">uin</span>     发送者QQ号\n  * <span class="token keyword">@param</span> <span class="token parameter">name</span>    发送者显示名字\n  * <span class="token keyword">@param</span> <span class="token parameter">msgList</span> 消息列表，每个元素视为一个消息节点\n  *                https://docs.go-cqhttp.org/cqcode/#%E5%90%88%E5%B9%B6%E8%BD%AC%E5%8F%91\n  * <span class="token keyword">@return</span> 转发消息\n  */</span>\n<span class="token class-name">ShiroUtils</span><span class="token punctuation">.</span><span class="token function">generateForwardMsg</span><span class="token punctuation">(</span><span class="token keyword">long</span> uin<span class="token punctuation">,</span> <span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> msgList<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="消息链" tabindex="-1"><a class="header-anchor" href="#消息链" aria-hidden="true">#</a> 消息链</h2><div class="custom-container warning"><p class="custom-container-title">注意</p><p>支持 <code>String</code> 消息转换为 <code>Array</code> 消息（<code>v1.1.7</code> 及以上版本）</p></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Component</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ExamplePlugin</span> <span class="token keyword">extends</span> <span class="token class-name">BotPlugin</span> <span class="token punctuation">{</span>\n    \n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">onPrivateMessage</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NotNull</span> <span class="token class-name">Bot</span> bot<span class="token punctuation">,</span> <span class="token annotation punctuation">@NotNull</span> <span class="token class-name">PrivateMessageEvent</span> event<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        event<span class="token punctuation">.</span><span class="token function">getArrayMsg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>it <span class="token operator">-&gt;</span>\n                <span class="token string">&quot;image&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>it<span class="token punctuation">.</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n        <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>it <span class="token operator">-&gt;</span>\n                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>it<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;url&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n        <span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> MESSAGE_IGNORE<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    \n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h2 id="主动发送" tabindex="-1"><a class="header-anchor" href="#主动发送" aria-hidden="true">#</a> 主动发送</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// 注入 Bot 容器</span>\n<span class="token keyword">private</span> <span class="token class-name">BotContainer</span> botContainer<span class="token punctuation">;</span>\n\n<span class="token annotation punctuation">@Autowired</span>\n<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setBotContainer</span><span class="token punctuation">(</span><span class="token class-name">BotContainer</span> botContainer<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>botContainer <span class="token operator">=</span> botContainer<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">sendMsg</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 机器人账号</span>\n    val botId <span class="token operator">=</span> <span class="token number">123456789L</span><span class="token punctuation">;</span>\n    <span class="token comment">// 取出 Bot 对象</span>\n    val bot <span class="token operator">=</span> botContainer<span class="token punctuation">.</span>robots<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>botId<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// 调用 Bot 对象方法</span>\n    bot<span class="token punctuation">.</span><span class="token function">sendPrivateMsg</span><span class="token punctuation">(</span><span class="token number">12345L</span><span class="token punctuation">,</span> <span class="token string">&quot;Hi~&quot;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h2 id="高级自定义配置" tabindex="-1"><a class="header-anchor" href="#高级自定义配置" aria-hidden="true">#</a> 高级自定义配置</h2><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">server</span><span class="token punctuation">:</span>\n  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">5000</span>\n<span class="token key atrule">shiro</span><span class="token punctuation">:</span>\n  <span class="token comment"># 插件列表 (顺序执行，如果前一个插件返回了MESSAGE_BLOCK，将不会执行后续插件)</span>\n  <span class="token comment"># 注解方式无需在此定义插件</span>\n  <span class="token key atrule">plugin-list</span><span class="token punctuation">:</span>\n    <span class="token punctuation">-</span> com.mikuac.example.plugins.PluginOne\n    <span class="token punctuation">-</span> com.mikuac.example.plugins.PluginTwo\n  <span class="token comment"># 拦截器</span>\n  <span class="token key atrule">interceptor</span><span class="token punctuation">:</span>\n    <span class="token punctuation">-</span> com.mikuac.example.interceptor.Test\n  <span class="token comment"># WebSocket 配置</span>\n  <span class="token key atrule">ws-config</span><span class="token punctuation">:</span>\n    <span class="token comment"># 反向 Websocket 连接地址，无需该配置字段可删除，将使用默认值 &quot;/ws/shiro&quot;</span>\n    <span class="token key atrule">ws-url</span><span class="token punctuation">:</span> <span class="token string">&quot;/ws/shiro&quot;</span>\n    <span class="token comment"># 访问密钥，强烈推荐在公网的服务器设置</span>\n    <span class="token key atrule">access-token</span><span class="token punctuation">:</span> <span class="token string">&quot;&quot;</span>\n    <span class="token comment"># 插件列表</span>\n    <span class="token comment"># 超时回收，默认10秒</span>\n    <span class="token key atrule">do-request-timeout</span><span class="token punctuation">:</span> <span class="token number">100000</span>\n    <span class="token comment"># 二进制消息的最大长度</span>\n    <span class="token key atrule">max-binary-message-buffer-size</span><span class="token punctuation">:</span> <span class="token number">512000</span>\n    <span class="token comment"># 最大空闲时间，超过这个时间将close session</span>\n    <span class="token key atrule">max-session-idle-timeout</span><span class="token punctuation">:</span> <span class="token number">900000</span>\n    <span class="token comment"># 最大文本消息缓冲区</span>\n    <span class="token key atrule">max-text-message-buffer-size</span><span class="token punctuation">:</span> <span class="token number">512000</span>\n  <span class="token comment"># 限速器（令牌桶算法）</span>\n  <span class="token key atrule">limiter</span><span class="token punctuation">:</span>\n    <span class="token comment"># 是否启用限速器</span>\n    <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>\n    <span class="token comment"># 补充速率（每秒补充的令牌数量）</span>\n    <span class="token key atrule">rate</span><span class="token punctuation">:</span> <span class="token number">1</span>\n    <span class="token comment"># 令牌桶容量</span>\n    <span class="token key atrule">capacity</span><span class="token punctuation">:</span> <span class="token number">1</span>\n     <span class="token comment"># 如果该值为 true 时，当令牌获取失败则会阻塞当前线程，后续任务将被添加到等待队列。</span>\n     <span class="token comment"># 如果该值为 false 时，当令牌获取失败则会直接丢次本次请求。</span>\n    <span class="token key atrule">awaitTask</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>\n    <span class="token comment"># 等待超时</span>\n    <span class="token key atrule">timeout</span><span class="token punctuation">:</span> <span class="token number">10</span>\n  <span class="token comment"># 线程池配置</span>\n  <span class="token key atrule">task-pool</span><span class="token punctuation">:</span>\n    <span class="token comment"># 核心线程数（默认线程数）</span>\n    <span class="token key atrule">core-pool-size</span><span class="token punctuation">:</span> <span class="token number">10</span>\n    <span class="token comment"># 缓冲队列大小</span>\n    <span class="token key atrule">queue-capacity</span><span class="token punctuation">:</span> <span class="token number">200</span>\n    <span class="token comment"># 允许线程空闲时间（单位：默认为秒）</span>\n    <span class="token key atrule">keep-alive-time</span><span class="token punctuation">:</span> <span class="token number">10</span>\n    <span class="token comment"># 最大线程数</span>\n    <span class="token key atrule">max-pool-size</span><span class="token punctuation">:</span> <span class="token number">30</span>\n    <span class="token comment"># 线程池名前缀</span>\n    <span class="token key atrule">thread-name-prefix</span><span class="token punctuation">:</span> <span class="token string">&quot;ShiroTaskPool-&quot;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br></div></div>',28),p={render:function(n,s){return e}}}}]);